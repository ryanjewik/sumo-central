## Root docker-compose for sumo_app
# This file defines the frontend and backend services.
# To include Airflow (which already has its own compose file at ./airflow/docker-compose.yml),
# run: docker compose -f docker-compose.yml -f airflow/docker-compose.yml up -d

version: '3.8'

services:
  gin-backend:
    build:
      context: ./backend
    image: sumo-backend:local
    ports:
      - "8080:8080"
    env_file:
      - ${PWD}/backend/.env
    restart: unless-stopped
    networks:
      - sumo_net
      - airflow

  react-frontend:
    build:
      context: ./frontend
    image: sumo-frontend:local
    ports:
      # host:container -> map host 8081 to nginx:80 inside container
      - "8081:80"
    restart: unless-stopped
    depends_on:
      - gin-backend
    networks:
      - sumo_net
      - airflow

# NOTE: The Airflow service(s) live in ./airflow/docker-compose.yml. To start ALL services together
# use docker compose with both files so the service graphs are merged onto the same project/network:
#
# docker compose -f docker-compose.yml -f airflow/docker-compose.yml up -d
#
# If you prefer a single file that inlines Airflow, I can merge it here, but keeping it separate
# preserves the airflow team's existing configuration and makes upgrades easier.

networks:
  sumo_net:
    driver: bridge
  # The 'airflow' network is declared by the Airflow compose file. Mark it as external
  # here so the root compose references the same network when the Airflow file is
  # included with `-f`. This avoids duplicate/conflicting network definitions.
  airflow:
    external: true

